{"version":3,"file":"static/js/773.acc937a3.chunk.js","mappings":"+PAEaA,EAAOC,EAAAA,GAAAA,GAAH,wJASJC,EAAOD,EAAAA,GAAAA,GAAH,sLAUJE,EAAOF,EAAAA,GAAAA,IAAH,uIAQJG,EAAWH,EAAAA,GAAAA,EAAH,iEAKRI,EAAaJ,EAAAA,GAAAA,EAAH,qEAKVK,EAAUL,EAAAA,GAAAA,IAAH,2C,SCgBpB,EA1CgB,WACd,OAA8BM,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAmBH,GAAII,MAAK,SAAAC,GAC1BN,EAAWM,EAAKC,QACjB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACP,IAEgC,IAAhCU,OAAOC,KAAKb,GAASc,QAChB,uBAAG,gDAIV,gBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,SAACxB,EAAD,UACGQ,EAAQc,OAAS,EACdd,EAAQiB,KAAI,SAAAC,GAAO,OACjB,UAACxB,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,UAAWsB,EAAQC,UAEnB,SAACtB,EAAD,UACG,IAAIuB,KAAKF,EAAQG,YAAYC,2BAIlC,SAACxB,EAAD,UAAUoB,EAAQK,YATTL,EAAQhB,GADF,IAanB,oDAIX,C,mMCnDKsB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cAC3BG,EAD2B,yBAE1BA,EAASpB,MAFiB,2CAAH,qDAKnBqB,EAAiB,mCAAG,WAAMC,GAAN,uFACRJ,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCK,EADnC,gCADQ,cACzBF,EADyB,yBAIxBA,EAASpB,MAJe,2CAAH,sDAOjBuB,EAAe,mCAAG,WAAM5B,GAAN,uFACNuB,EAAAA,EAAAA,IAAA,gBACZvB,EADY,oBACEsB,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASpB,MAJa,2CAAH,sDAOfwB,EAAe,mCAAG,WAAM7B,GAAN,uFACNuB,EAAAA,EAAAA,IAAA,gBACZvB,EADY,4BACUsB,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASpB,MAJa,2CAAH,sDAOfF,EAAkB,mCAAG,WAAMH,GAAN,uFACTuB,EAAAA,EAAAA,IAAA,gBACZvB,EADY,4BACUsB,EADV,2BADS,cAC1BG,EAD0B,yBAIzBA,EAASpB,MAJgB,2CAAH,qD","sources":["pages/Movies/Reviews/Reviews.styled.js","pages/Movies/Reviews/Reviews.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: flex-start;\n  justify-content: start;\n  gap: 20px;\n  padding: 10px;\n  border: 1px solid darkred;\n  border-radius: 5px;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UserName = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const DateCreate = styled.p`\n  display: flex;\n  justify-self: self-end;\n`;\n\nexport const Comment = styled.div`\n  max-width: 80%;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'services/Api';\n\nimport {\n  List,\n  Item,\n  Info,\n  UserName,\n  DateCreate,\n  Comment,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState({});\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    try {\n      fetchMoviesReviews(id).then(data => {\n        setReviews(data.results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  if (Object.keys(reviews).length === 0) {\n    return <p>Sorry, there is no reviews for this movie!</p>;\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <List>\n        {reviews.length > 0\n          ? reviews.map(comment => (\n              <Item key={comment.id}>\n                <Info>\n                  <UserName>{comment.author}</UserName>\n\n                  <DateCreate>\n                    {new Date(comment.updated_at).toLocaleDateString()}\n                  </DateCreate>\n                </Info>\n\n                <Comment>{comment.content}</Comment>\n              </Item>\n            ))\n          : \"Sorry, we don't have any review for this movie\"}\n      </List>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'f796c87b999028931b2db4dbe3fd1c94';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["List","styled","Item","Info","UserName","DateCreate","Comment","useState","reviews","setReviews","id","useParams","useEffect","fetchMoviesReviews","then","data","results","error","console","log","Object","keys","length","style","display","map","comment","author","Date","updated_at","toLocaleDateString","content","API_KEY","axios","fetchTrendingMovies","response","fetchMoviesByName","query","fetchMoviesById","fetchMoviesCast"],"sourceRoot":""}
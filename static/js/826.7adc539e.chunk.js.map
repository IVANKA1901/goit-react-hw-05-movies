{"version":3,"file":"static/js/826.7adc539e.chunk.js","mappings":"8LAEaA,E,QAAgBC,GAAAA,IAAH,6O,SCa1B,EAXkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,SAACF,EAAD,UAAgBE,GACxB,C,wGCHYC,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yZAmBJI,EAAOJ,EAAAA,GAAAA,GAAH,6HAQJK,EAAOL,EAAAA,GAAAA,GAAH,gEAIJM,EAAYN,EAAAA,GAAAA,EAAH,qN,mBCAtB,MA5BA,YAAgD,IAA3BO,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YACxBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,WACE,UAACH,EAAD,CAAMU,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA1C,WACE,gBACEK,IACEN,EAAW,yCAC2BA,GAD3B,6DAIbO,IAAKR,EACLS,MAAM,MACNC,OAAO,SAET,SAACZ,EAAD,UAAYE,QAZLD,EAgBd,ECXD,EAVkB,SAAC,GAAgB,IAAdY,EAAa,EAAbA,OACnB,OACE,SAACf,EAAD,UACGe,EAAOC,KAAI,gBAAGb,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAAC,EAAD,CAAoBF,GAAIA,EAAIC,MAAOA,EAAOC,YAAaA,GAAvCF,EADN,KAKjB,C,uGCXYc,E,QAAcrB,GAAAA,GAAH,mL,iDCAXsB,EAAS,kBACpB,0BACE,SAAC,KAAD,CACEC,SAAS,EACTL,OAAO,MACPD,MAAM,MACNO,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cATrC,ECiCtB,EA3Ba,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,KACEE,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GACzBN,EAAUM,EAAKC,SACfL,GAAa,EACd,GAGF,CAFC,MAAOM,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,KAGD,2BACE,UAACG,EAAA,EAAD,YACE,SAACnB,EAAD,UAAa,gCACZF,EAAOsB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAWvB,OAAQA,IACxCW,IAAa,SAACR,EAAD,QAIrB,C,mMC/BKqB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMX,EAAmB,mCAAG,oGACVW,EAAAA,EAAAA,IAAA,qCAAwCD,IAD9B,cAC3BE,EAD2B,yBAE1BA,EAASV,MAFiB,2CAAH,qDAKnBW,EAAiB,mCAAG,WAAMC,GAAN,uFACRH,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCI,EADnC,gCADQ,cACzBF,EADyB,yBAIxBA,EAASV,MAJe,2CAAH,sDAOjBa,EAAe,mCAAG,WAAMzC,GAAN,uFACNqC,EAAAA,EAAAA,IAAA,gBACZrC,EADY,oBACEoC,EADF,oBADM,cACvBE,EADuB,yBAItBA,EAASV,MAJa,2CAAH,sDAOfc,EAAe,mCAAG,WAAM1C,GAAN,uFACNqC,EAAAA,EAAAA,IAAA,gBACZrC,EADY,4BACUoC,EADV,oBADM,cACvBE,EADuB,yBAItBA,EAASV,MAJa,2CAAH,sDAOfe,EAAkB,mCAAG,WAAM3C,GAAN,uFACTqC,EAAAA,EAAAA,IAAA,gBACZrC,EADY,4BACUoC,EADV,2BADS,cAC1BE,EAD0B,yBAIzBA,EAASV,MAJgB,2CAAH,qD","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Movie/Movie.styled.js","components/Movie/MovieItem/MovieItem.jsx","components/Movie/MovieList/MovieList.jsx","pages/Home/Home.styled.js","components/Loader/Loader.jsx","pages/Home/Home.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MainContainer } from './Container.styled';\n\nconst Container = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Container;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  /* padding: 2px; */\n  border-radius: 5px;\n  color: black;\n  font-weight: 500;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    color: black;\n    background-color: white;\n    transform: scale(1.1);\n    box-shadow: 0 5px 10px rgba(1, 1, 1, 1);\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 50px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 70px) / 3);\n`;\n\nexport const MovieName = styled.p`\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  margin-top: 10px;\n  color: black;\n  background-color: beige;\n  border-radius: 5px;\n  box-shadow: 0 5px 10px rgb(28 27 27);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item, Link, MovieName } from '../Movie.styled';\n\nimport { useLocation } from 'react-router-dom';\n\nfunction MovieItem({ id, title, poster_path }) {\n  const location = useLocation();\n\n  return (\n    <Item key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `https://wipfilms.net/wp-content/data/posters/tt0338683.jpg`\n          }\n          alt={title}\n          width=\"250\"\n          height=\"350\"\n        />\n        <MovieName>{title}</MovieName>\n      </Link>\n    </Item>\n  );\n}\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport { List } from '../Movie.styled';\nimport PropTypes from 'prop-types';\nimport MovieItem from '../MovieItem/MovieItem';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster_path={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const TrendTittle = styled.h1`\n  margin-bottom: 16px;\n  padding: 15px;\n  border-radius: 5px;\n  color: #f0e4e4;\n  background-color: #a65e51;\n  box-shadow: 0 5px 10px rgb(28 27 27);\n`;\n","import { ColorRing } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <div>\n    <ColorRing\n      visible={true}\n      height=\"160\"\n      width=\"160\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  </div>\n);\n","import React from 'react';\nimport { TrendTittle } from './Home.styled';\nimport Container from '../../components/Container/Container';\nimport { fetchTrendingMovies } from '../../services/Api';\nimport { useState, useEffect } from 'react';\nimport MovieList from '../../components/Movie/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      fetchTrendingMovies().then(data => {\n        setMovies(data.results);\n        setIsLoading(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <TrendTittle>Trending today üçø</TrendTittle>\n        {movies.length > 0 && <MovieList movies={movies} />}\n        {isLoading && <Loader />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'f796c87b999028931b2db4dbe3fd1c94';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["MainContainer","styled","children","Link","NavLink","List","Item","MovieName","id","title","poster_path","location","useLocation","to","state","from","src","alt","width","height","movies","map","TrendTittle","Loader","visible","ariaLabel","wrapperStyle","wrapperClass","colors","useState","setMovies","isLoading","setIsLoading","useEffect","fetchTrendingMovies","then","data","results","error","console","log","Container","length","MovieList","API_KEY","axios","response","fetchMoviesByName","query","fetchMoviesById","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}